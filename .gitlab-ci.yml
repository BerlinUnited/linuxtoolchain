stages:
  - build_base
  - build_libs
  - test

image: docker:latest
services:
 - docker:dind

before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN scm.cms.hu-berlin.de:4567
    # - docker login -u CI_USER -p $CI_USER_TOKEN scm.cms.hu-berlin.de:4567

variables:
    # https://about.gitlab.com/blog/2019/07/31/docker-in-docker-with-docker-19-dot-03/
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
    DOCKER_IMAGE: scm.cms.hu-berlin.de:4567/berlinunited/tools/linuxtoolchain

build_base:
  # there is a schedule that runs every week and builds the base image
  stage: build_base
  rules:
    - if: '$BUILD_BASE_IMAGE'
  script:
    - docker build -f Dockerfile.base -t $DOCKER_IMAGE:toolchain_base_image .
    - docker push $DOCKER_IMAGE:toolchain_base_image

build_and_deploy:
  stage: build_libs
  rules:
     - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master"'
     - if: '$CI_PIPELINE_SOURCE == "web"'
  script:
    - echo "build and deploy the toolchain"
    # getting docker-tag friendly version of the current branch name: replace / with underscore
    - branchname=`echo "${CI_COMMIT_REF_NAME}" | sed "s/\//_/g"`

    - docker build -t $DOCKER_IMAGE:$branchname .
    - docker push $DOCKER_IMAGE:$branchname


build_naoth:
  stage: test
  rules:
     - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master"'
     - if: '$CI_PIPELINE_SOURCE == "web"'
  script:
  - apk add curl
  # getting docker-tag friendly version of the current branch name: replace / with underscore
  - branchname=`echo "${CI_COMMIT_REF_NAME}" | sed "s/\//_/g"`
  - curl --request POST --form token=99cecc4a5ecf9928d287a592236580 --form ref=develop --form "variables[DOCKER_IMAGE]=$DOCKER_IMAGE:$branchname" https://scm.cms.hu-berlin.de/api/v4/projects/3384/trigger/pipeline